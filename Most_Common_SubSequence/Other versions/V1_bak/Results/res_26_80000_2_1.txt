==12245== Memcheck, a memory error detector
==12245== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12245== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==12245== Command: ./a.out ../Inputs/sequenceA_26_80000_1.txt ../Inputs/sequenceB_26_80000_1.txt 2 80000
==12245== 
==12245== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==12245== 
==12245== Process terminating with default action of signal 11 (SIGSEGV)
==12245==  Access not within mapped region at address 0x1FFE801FFC
==12245== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==12245==    at 0x109870: recur_findMCSS (MCSS.c:106)
==12245==  If you believe this happened as a result of a stack
==12245==  overflow in your program's main thread (unlikely but
==12245==  possible), you can try to increase the size of the
==12245==  main thread stack using the --main-stacksize= flag.
==12245==  The main thread stack size used in this run was 8388608.
==12245== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==12245== 
==12245== Process terminating with default action of signal 11 (SIGSEGV)
==12245==  Access not within mapped region at address 0x1FFE801FE8
==12245== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==12245==    at 0x482E110: _vgnU_freeres (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so)
==12245==  If you believe this happened as a result of a stack
==12245==  overflow in your program's main thread (unlikely but
==12245==  possible), you can try to increase the size of the
==12245==  main thread stack using the --main-stacksize= flag.
==12245==  The main thread stack size used in this run was 8388608.
==12245== 
==12245== HEAP SUMMARY:
==12245==     in use at exit: 12,800,804,096 bytes in 80,004 blocks
==12245==   total heap usage: 80,008 allocs, 4 frees, 12,800,813,392 bytes allocated
==12245== 
==12245== LEAK SUMMARY:
==12245==    definitely lost: 0 bytes in 0 blocks
==12245==    indirectly lost: 0 bytes in 0 blocks
==12245==      possibly lost: 0 bytes in 0 blocks
==12245==    still reachable: 12,800,804,096 bytes in 80,004 blocks
==12245==         suppressed: 0 bytes in 0 blocks
==12245== Rerun with --leak-check=full to see details of leaked memory
==12245== 
==12245== For counts of detected and suppressed errors, rerun with: -v
==12245== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
